name: Deploy DEV (Simulation)

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest

    outputs:
      version_to_deploy: ${{ steps.version.outputs.VERSION_TO_DEPLOY }}
      changed_files: ${{ steps.get_changes.outputs.changed_files }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: get_changes
        run: |
          git diff --name-only HEAD^ HEAD > changed_files.txt
          echo "changed_files=$(cat changed_files.txt)" >> $GITHUB_ENV
          echo "Changed files detected:"
          cat changed_files.txt

  simulate_push_jfrog:
    needs: prepare
    strategy:
      matrix:
        name: ['api', 'docs']
          
    name: Simulate build and push for ${{ matrix.name }}
    runs-on: ubuntu-latest

    env:
      MATRIX_NAME: ${{ matrix.name }}

    steps:
      - name: Set service path
        id: set_paths
        run: |
          if [ "$MATRIX_NAME" == "api" ]; then
            echo "service_path=api/" >> $GITHUB_ENV
          elif [ "$MATRIX_NAME" == "docs" ]; then
            echo "service_path=docs/" >> $GITHUB_ENV
          fi

      - name: Debug Paths and Files
        env:
          service_path: ${{ steps.set_paths.outputs.service_path }}
          changed_files: ${{ needs.prepare.outputs.changed_files }}
        run: |
          echo "Service path for matrix $MATRIX_NAME: $service_path"
          echo "Changed files: $changed_files"

      - name: Check if service was modified
        id: check_modifications
        env:
          service_path: ${{ steps.set_paths.outputs.service_path }}
          changed_files: ${{ needs.prepare.outputs.changed_files }}
        run: |
          if echo "$changed_files" | grep -q "$service_path"; then
            echo "Changes detected for $MATRIX_NAME"
            echo "should_deploy=true" >> $GITHUB_ENV
          else
            echo "No changes detected for $MATRIX_NAME"
            echo "should_deploy=false" >> $GITHUB_ENV
          fi

      - name: Simulate building Docker image
        if: env.should_deploy == 'true'
        run: |
          echo "Building Docker image for $MATRIX_NAME"
          echo "This would execute: docker build -f ./apps/$MATRIX_NAME/Dockerfile ."
      
      - name: Simulate pushing Docker image to JFrog
        if: env.should_deploy == 'true'
        run: |
          echo "Simulating push of Docker image for $MATRIX_NAME to Docker"
          echo "Image name: $MATRIX_NAME"
          echo "Repository: docker"
