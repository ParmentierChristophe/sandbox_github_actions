name: Environment Configuration Workflow

on:
    workflow_dispatch:
        inputs:
            env:
                type: choice
                required: true
                description: 'Choose environment'
                options:
                    - DEV
                    - STAGING
                    - PROD

jobs:
    set-env:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                include:
                    - env: DEV
                      apikey_path: 'path/dev/to'
                      business_units: '["bu1", "bu2"]'
                      contexts: '["sit"]'
                      service_accounts: |
                          [
                            {
                              "name": "name-app",
                              "id": "id-app"
                            },
                            {
                              "name": "name-app2",
                              "id": "id-app2"
                            }
                          ]
                    - env: STAGING
                      apikey_path: 'path/uat/to'
                      business_units: '["bu1", "bu3"]'
                      contexts: '["uat", "pprod"]'
                      service_accounts: |
                          [
                            {
                              "name": "name-app",
                              "id": "id-app"
                            },
                            {
                              "name": "name-app2",
                              "id": "id-app2"
                            }
                          ]
                    - env: PROD
                      apikey_path: 'path/prod/to'
                      business_units: '["bu2", "bu3"]'
                      contexts: '["prod"]'
                      service_accounts: |
                          [
                            {
                              "name": "name-app",
                              "id": "id-app"
                            },
                            {
                              "name": "name-app2",
                              "id": "id-app2"
                            }
                          ]
        outputs:
            env: ${{ steps.set_output.outputs.env }}
            apikey_path: ${{ steps.set_output.outputs.apikey_path }}
            business_units: ${{ steps.set_output.outputs.business_units }}
            contexts: ${{ steps.set_output.outputs.contexts }}
            service_accounts: ${{ steps.set_output.outputs.service_accounts }}
        steps:
            - name: Setup Environment
              if: ${{ matrix.env == github.event.inputs.env }}
              run: |
                echo "Setting up environment for ${{ matrix.env }}"
                echo "env=${{ matrix.env }}" >> $GITHUB_OUTPUT
                echo "apikey_path=${{ matrix.apikey_path }}" >> $GITHUB_OUTPUT
                echo "business_units=${{ matrix.business_units }}" >> $GITHUB_OUTPUT
                echo "contexts=${{ matrix.contexts }}" >> $GITHUB_OUTPUT
                SERVICE_ACCOUNTS_JSON=$(echo '${{ toJson(matrix.service_accounts) }}' | jq -r @json)
                echo "service_accounts=$SERVICE_ACCOUNTS_JSON" >> $GITHUB_OUTPUT
              id: set_output

    echo-env:
        needs: set-env
        runs-on: ubuntu-latest
        if: ${{ needs.set-env.outputs.env == github.event.inputs.env }}
        steps:
            - name: Echo Environment Configuration
              run: |
                  echo "Environment: ${{ needs.set-env.outputs.env }}"
                  echo "API Key Path: ${{ needs.set-env.outputs.apikey_path }}"
                  echo "BUSINESS_UNITS: ${{ needs.set-env.outputs.business_units }}"
                  echo "Contexts: ${{ needs.set-env.outputs.contexts }}"
                  echo "SA: ${{ fromJson(needs.set-env.outputs.service_accounts) }}"
