name: GitHub Actions Demo
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Source environment(dev, uat1, preprod)'
        required: true

env:
  DAY_OF_WEEK: Monday


jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "$DAY_OF_WEEK"
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  prepare-data:
    runs-on: ubuntu-latest
    name: Prepare Data
    outputs:
      topics: ${{ steps.read_topics.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Read list of topics'
        id: read_topics
        run: |
          echo "$(cat ./docs/create.json)"
          content="$(cat ./docs/create.json)"
          echo "${content//'%'/'%25'}"
          content="${content//'%'/'%25'}"
          echo "${content//$'\n'/}"
          content="${content//$'\n'/}"
          echo "${content//$'\r'/}"
          content="${content//$'\r'/}"
          echo "${content// /}"
          content="${content// /}"
          echo "::set-output name=content::$content"
          content="${content//sourceEnvironment/${{ github.event.inputs.environment }}}"
      - run : echo ${{ steps.read_topics.outputs.content }}

  register-topics:
    runs-on: ubuntu-latest
    name: Register topic
    needs: [ prepare-data ]
    strategy:
      matrix:
        topics: ${{ fromJson(needs.prepare-data.outputs.topics) }}
    steps:
      - name: 'Run Kafka CLI image'
        run: echo ${{ matrix.topics.topic}}
